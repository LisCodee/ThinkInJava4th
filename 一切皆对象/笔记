### 一切皆对象
一、通过引用来操纵对象，引用也可以脱离对象而存在。
    eg：String s;    //创建一个String引用，但是不能向s发送消息，否则会发生运行时错误。
二、必须由你来创建所有的对象。
    一旦创建一个引用，就希望它与一个对象创建关联，这个过程同过new操作符来实现。
    eg：String s = new String("abc");
    存储位置：
        1. 寄存器：最快的存储区，位于cpu内部，不可直接控制。
        2. 堆栈：位于通用RAM（随机访问存储器），速度仅次于寄存器，Java中的某些数据，特别是对象引用就存储在堆栈中。
        3. 堆：一种通用的内存池（位于RAM），存放所有的Java对象。在需要一个对象时，可以直接通过new在堆里进行存储分配，
            但是比堆栈需要更多的时间。
        4. 常量存储：放在代码内部。
        5. 非RAM存储：存活于程序之外，不受程序任何控制，在程序没有运行时也可以存在。（流对象和持久化对象）
三、基本类型
    Java中基本类型并非是引用类型，而是向C++一样，直接在堆栈中存储。可以通过包装类在堆中创建一个非基本对象表示对应的基本类型。
    Java中的数值类型全部有正负，没有无符号数。
    基本类型所占用空间大小是固定的，并不因为机器硬件变化而变化，这一点同C/C++不同。
    |基本类型|大小|最小值|最大值|包装类|
    |boolean|--|--|Boolean|
    |char|16bit|Unicode o|unicode 2^16-1|Character|
    |byte|8bits|-128|127|Byte|
    |short|16bits|-2^15|2^15-1|Short|
    |int|32bits|-2^31|2^31-1|Integer|
    |long|64bits|-2^63|2^63-1|Long|
    |float|32bits|IEEE754|IEEE754|Float|
    |double|64bits|IEEE754|IEEE754|Double|
    |void|--|--|--|Void|
    Java中还提供了大数计算的类，BigInteger和BigDecimal。前者为高精度整数，后者为高精度小数。
四、Java中的数组会自动进行初始化，引用数组初始化为null，基本类型为0，boolean类型为false，同时会在运行时自动进行下标检查以
    确保安全。
五、对象的销毁
    在Java中不需要自己手动销毁对象回收内存，这方面的工作由Java的垃圾回收机制完成。
六、static关键字
    当声明一个事物是static的时，就意味着这个域或者方法不会与包含它的那个类的任何对象示例关联在一起。所以static方法可以通过
    类来直接调用。static字段对每个类来说只有一份存储空间，而非static字段则会对每个对象有一个存储空间。
七、args用来存储命令行参数。
八、编码风格
    类名：驼峰命名法
其他细节在之后的章节中会详细精讲，本章中略过。